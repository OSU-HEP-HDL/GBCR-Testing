#
# dbw 20220418
# CRC32=x32+x26+x23+x22+x16+x12+x11+x10+x8+x7+x5+x4+x2+x1+1
# function CRC32_8
from binhex import binhex
from locale import atoi


def crc32_8(data, crc32_init):
    ct = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    d = [0, 0, 0, 0, 0, 0, 0, 0]

    for k in range(8):
        d[7 - k] = atoi(bin(data)[2:].zfill(8)[k])
    c = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    for k in range(32):
        c[31 - k] = atoi(bin(crc32_init)[2:].zfill(32)[k])
    ct[0] = c[30] ^ d[6] ^ c[24] ^ d[0]
    ct[1] = c[30] ^ d[6] ^ c[24] ^ d[00] ^ c[31] ^ d[7] ^ c[25] ^ d[1]
    ct[2] = c[30] ^ d[6] ^ c[24] ^ d[00] ^ c[31] ^ d[7] ^ c[25] ^ d[1] ^ c[26] ^ d[2]
    ct[3] = c[31] ^ d[7] ^ c[25] ^ d[1] ^ c[26] ^ d[2] ^ c[27] ^ d[3]
    ct[4] = c[30] ^ d[6] ^ c[24] ^ d[00] ^ c[26] ^ d[2] ^ c[27] ^ d[3] ^ c[28] ^ d[4]
    ct[5] = c[30] ^ d[6] ^ c[24] ^ d[00] ^ c[31] ^ d[7] ^ c[25] ^ d[1] ^ c[27] ^ d[3] ^ c[28] ^ d[4] ^ c[29] ^ d[5]
    ct[6] = c[31] ^ d[7] ^ c[25] ^ d[1] ^ c[26] ^ d[2] ^ c[28] ^ d[4] ^ c[29] ^ d[5] ^ c[30] ^ d[6]
    ct[7] = c[24] ^ d[0] ^ c[26] ^ d[2] ^ c[27] ^ d[3] ^ c[29] ^ d[5] ^ c[31] ^ d[7]
    ct[8] = c[24] ^ d[00] ^ c[25] ^ d[1] ^ c[27] ^ d[3] ^ c[28] ^ d[4] ^ c[00]
    ct[9] = c[25] ^ d[1] ^ c[26] ^ d[2] ^ c[28] ^ d[4] ^ c[29] ^ d[5] ^ c[1]
    ct[10] = c[24] ^ d[00] ^ c[26] ^ d[2] ^ c[27] ^ d[3] ^ c[29] ^ d[5] ^ c[2]
    ct[11] = c[24] ^ d[00] ^ c[25] ^ d[1] ^ c[27] ^ d[3] ^ c[28] ^ d[4] ^ c[3]
    ct[12] = c[30] ^ d[6] ^ c[24] ^ d[00] ^ c[25] ^ d[1] ^ c[26] ^ d[2] ^ c[28] ^ d[4] ^ c[29] ^ d[5] ^ c[4]
    ct[13] = c[31] ^ d[7] ^ c[25] ^ d[1] ^ c[26] ^ d[2] ^ c[27] ^ d[3] ^ c[29] ^ d[5] ^ c[30] ^ d[6] ^ c[5]
    ct[14] = c[26] ^ d[2] ^ c[27] ^ d[3] ^ c[28] ^ d[4] ^ c[30] ^ d[6] ^ c[31] ^ d[7] ^ c[6]
    ct[15] = c[27] ^ d[3] ^ c[28] ^ d[4] ^ c[29] ^ d[5] ^ c[31] ^ d[7] ^ c[7]
    ct[16] = c[30] ^ d[6] ^ c[24] ^ d[00] ^ c[28] ^ d[4] ^ c[29] ^ d[5] ^ c[30] ^ d[6] ^ c[8]
    ct[17] = c[25] ^ d[1] ^ c[29] ^ d[5] ^ c[30] ^ d[6] ^ c[9]
    ct[18] = c[26] ^ d[2] ^ c[30] ^ d[6] ^ c[31] ^ d[7] ^ c[10]
    ct[19] = c[27] ^ d[3] ^ c[31] ^ d[7] ^ c[11]
    ct[20] = c[28] ^ d[4] ^ c[12]
    ct[21] = c[29] ^ d[5] ^ c[13]
    ct[22] = c[24] ^ d[0] ^ c[14]
    ct[23] = c[30] ^ d[6] ^ c[24] ^ d[0] ^ c[25] ^ d[1] ^ c[15]
    ct[24] = c[31] ^ d[7] ^ c[25] ^ d[1] ^ c[26] ^ d[2] ^ c[16]
    ct[25] = c[26] ^ d[2] ^ c[27] ^ d[3] ^ c[17]
    ct[26] = c[30] ^ d[6] ^ c[24] ^ d[00] ^ c[27] ^ d[3] ^ c[28] ^ d[4] ^ c[18]
    ct[27] = c[31] ^ d[7] ^ c[25] ^ d[1] ^ c[28] ^ d[4] ^ c[29] ^ d[5] ^ c[19]
    ct[28] = c[26] ^ d[2] ^ c[29] ^ d[5] ^ c[30] ^ d[6] ^ c[20]
    ct[29] = c[27] ^ d[3] ^ c[30] ^ d[6] ^ c[31] ^ d[7] ^ c[21]
    ct[30] = c[28] ^ d[4] ^ c[31] ^ d[7] ^ c[22]
    ct[31] = c[29] ^ d[5] ^ c[23]
    crc_o = 0
    j = 1
    for i in range(32):
        crc_o = crc_o + ct[i] * j
        j = j * 2
    return crc_o